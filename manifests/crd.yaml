---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: flexdaemonsettemplates.flexdaemonsets.xai
spec:
  group: flexdaemonsets.xai
  names:
    kind: FlexDaemonsetTemplate
    listKind: FlexDaemonsetTemplateList
    plural: flexdaemonsettemplates
    shortNames:
    - fdt
    singular: flexdaemonsettemplate
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FlexDaemonsetTemplate is the Schema for the flexdaemonsettemplates
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: FlexDaemonsetTemplateSpec defines the desired state of FlexDaemonsetTemplate
            properties:
              cpuPercentage:
                description: CPUPercentage is the percentage of CPU to allocate from
                  the node's allocatable CPU.
                format: int32
                maximum: 100
                minimum: 1
                type: integer
              memoryPercentage:
                description: MemoryPercentage is the percentage of Memory to allocate
                  from the node's allocatable memory.
                format: int32
                maximum: 100
                minimum: 1
                type: integer
              minCPU:
                description: MinCPU specifies the minimum absolute CPU request in
                  milliCPU (e.g., "100m").
                type: string
              minMemory:
                description: MinMemory specifies the minimum absolute memory request
                  (e.g., "64Mi").
                type: string
              minStorage:
                description: MinStorage specifies the minimum absolute ephemeral-storage
                  request (e.g., "1Gi").
                type: string
              storagePercentage:
                description: StoragePercentage is the percentage of ephemeral-storage
                  to allocate from the node's allocatable ephemeral-storage.
                format: int32
                maximum: 100
                minimum: 1
                type: integer
            required:
            - cpuPercentage
            - memoryPercentage
            - storagePercentage
            type: object
          status:
            description: |-
              FlexDaemonsetTemplateStatus defines the observed state of FlexDaemonsetTemplate
              This can be used for status reporting in the future, but is not strictly needed for the webhook.
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of a FlexDaemonsetTemplate's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
